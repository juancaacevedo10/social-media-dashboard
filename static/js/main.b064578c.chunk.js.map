{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/TopCardList/TopCardList.js","components/CardSmall/CardSmall.js","components/Overview/Overview.js","components/Switch/Switch.js","App.js","index.js"],"names":["Header","children","className","Card","username","followers","todayFollowers","icon","name","src","alt","TopCardList","id","map","cardData","key","CardSmall","growth","pageViews","Overview","Switch","setDarkMode","checked","setChecked","ref","useRef","onChange","current","type","htmlFor","App","useState","darkMode","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b064578c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Header ({ children }) {\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"header-grid\">\r\n            <div>\r\n              <h1>Social Media Dashboard</h1>\r\n              <p className=\"header-total\">Total Followers: 23, 004</p>\r\n              <hr></hr>\r\n            </div>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n","import React from 'react'\r\nimport './card.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Card ({ username, followers, todayFollowers, icon, name }) {\r\n  return (\r\n    <article className={`card ${name}`}>\r\n      <p className=\"card-title\">\r\n        <img src={icon} alt=\"\" />\r\n        {username}\r\n      </p>\r\n      <p className=\"card-followers\">\r\n        <span className=\"card-followers-number\">{followers}</span>\r\n        <span className=\"card-followers-title\">Followers</span>\r\n      </p>\r\n      <p className=\"card-today\">\r\n        <img src=\"images/icon-up.svg\" alt=\"\" />\r\n        {todayFollowers} Today\r\n      </p>\r\n    </article>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  username: PropTypes.string,\r\n  followers: PropTypes.string,\r\n  todayFollowers: PropTypes.number,\r\n  icon: PropTypes.string,\r\n  name: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport Card from '../Card/Card'\r\nimport './TopCardList.css'\r\nexport default function TopCardList () {\r\n  const cardListData = [\r\n    {\r\n      username: '@Example',\r\n      id: 1,\r\n      followers: '1987',\r\n      todayFollowers: 12,\r\n      icon: 'images/icon-facebook.svg',\r\n      name: 'facebook'\r\n    },\r\n    {\r\n      username: '@Example',\r\n      id: 2,\r\n      followers: '1044',\r\n      todayFollowers: 99,\r\n      icon: 'images/icon-twitter.svg',\r\n      name: 'twitter'\r\n    },\r\n    {\r\n      username: '@Example',\r\n      id: 3,\r\n      followers: '11k',\r\n      todayFollowers: 1099,\r\n      icon: 'images/icon-instagram.svg',\r\n      name: 'instagram'\r\n    },\r\n    {\r\n      username: '@Example',\r\n      id: 4,\r\n      followers: '8239',\r\n      todayFollowers: -144,\r\n      icon: 'images/icon-youtube.svg',\r\n      name: 'youtube'\r\n    }\r\n  ]\r\n  return (\r\n    <section className=\"top-cards\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"grid\">\r\n          {\r\n            cardListData.map((cardData) => <Card key={cardData.id} {...cardData} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './cardSmall.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function CardSmall ({ growth, pageViews, icon }) {\r\n  return (\r\n    <div className=\"card-small\">\r\n      <p className=\"card-small-views\">Page Views</p>\r\n      <p className=\"card-small-icon\">\r\n        <img src={icon} alt=\"\" />\r\n      </p>\r\n      <p className=\"card-small-number\">{pageViews}</p>\r\n      <p className=\"card-small-percentage\">\r\n        <span>\r\n          <img src=\"images/icon-up.svg\" alt=\"icon-up\" />\r\n          {growth}%\r\n        </span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nCardSmall.propTypes = {\r\n  icon: PropTypes.string,\r\n  pageViews: PropTypes.string,\r\n  growth: PropTypes.number\r\n}\r\n","import React from 'react'\r\nimport './overview.css'\r\nimport CardSmall from '../CardSmall/CardSmall'\r\n\r\nexport default function Overview () {\r\n  const cardSmallList = [\r\n    {\r\n      icon: 'images/icon-facebook.svg',\r\n      pageViews: '87',\r\n      growth: 3,\r\n      key: 1\r\n    },\r\n    {\r\n      icon: 'images/icon-twitter.svg',\r\n      pageViews: '52',\r\n      growth: 2257,\r\n      key: 2\r\n    },\r\n    {\r\n      icon: 'images/icon-instagram.svg',\r\n      pageViews: '5462',\r\n      growth: 1375,\r\n      key: 3\r\n    },\r\n    {\r\n      icon: 'images/icon-youtube.svg',\r\n      pageViews: '117',\r\n      growth: 303,\r\n      key: 4\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <section className=\"overview\">\r\n      <div className=\"wrapper\">\r\n        <h2>Overview - Today</h2>\r\n        <div className=\"grid\">\r\n          {\r\n            cardSmallList.map(({ icon, pageViews, growth, key }) => (\r\n              <CardSmall\r\n                icon={icon}\r\n                key={key}\r\n                pageViews={pageViews}\r\n                growth={growth}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport './switch.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Switch ({ setDarkMode, checked, setChecked }) {\r\n  const ref = useRef(null)\r\n  function handleChange () {\r\n    setChecked(ref.current.checked)\r\n    setDarkMode(ref.current.checked)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dark-mode\" >\r\n      <p className=\"dark-mode-title\">Dark Mode</p>\r\n      <input ref={ref} onChange={handleChange} type=\"checkbox\" checked={checked} className=\"checkbox\" id=\"checkbox\" />\r\n      <label className=\"switch\" htmlFor=\"checkbox\">\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nSwitch.propTypes = {\r\n  setDarkMode: PropTypes.func,\r\n  checked: PropTypes.bool,\r\n  setChecked: PropTypes.func\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header/Header'\nimport TopCardList from './components/TopCardList/TopCardList'\nimport Overview from './components/Overview/Overview'\nimport Switch from './components/Switch/Switch'\n\nfunction App () {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia (mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n\n  return (\n    <main className={mainClass}>\n      <Header>\n        <Switch\n          setDarkMode={setDarkMode}\n          checked={checked}\n          setChecked={setChecked}\n        />\n      </Header>\n      <TopCardList></TopCardList>\n      <Overview></Overview>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}